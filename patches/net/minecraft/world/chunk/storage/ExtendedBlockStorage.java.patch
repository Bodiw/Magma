--- ../src-base/minecraft/net/minecraft/world/chunk/storage/ExtendedBlockStorage.java
+++ ../src-work/minecraft/net/minecraft/world/chunk/storage/ExtendedBlockStorage.java
@@ -15,10 +15,16 @@
     private NibbleArray blockLight;
     private NibbleArray skyLight;
 
-    public ExtendedBlockStorage(int y, boolean storeSkylight)
+    // Paper start - Anti-Xray - Support default constructor
+    public ExtendedBlockStorage(int y, boolean storeSkylight) {
+        this(y, storeSkylight,(IBlockState[]) null);
+    }
+    // Paper end
+
+    public ExtendedBlockStorage(int y, boolean storeSkylight, IBlockState[] predefinedBlockData) // Paper - Anti-Xray - Add predefined block data
     {
         this.yBase = y;
-        this.data = new BlockStateContainer();
+        this.data = new BlockStateContainer(predefinedBlockData); // Paper - Anti-Xray - Add predefined block data
         this.blockLight = new NibbleArray();
 
         if (storeSkylight)
@@ -27,6 +33,28 @@
         }
     }
 
+    // Paper start - Anti-Xray - Support default constructor
+    public ExtendedBlockStorage(int y, boolean flag, char[] blockIds) {
+        this(y, flag, blockIds, null);
+    }
+    // Paper end
+
+    public ExtendedBlockStorage(int y, boolean flag, char[] blockIds, IBlockState[] predefinedBlockData) { // Paper - Anti-Xray - Add predefined block data
+        this.yBase = y;
+        this.data = new BlockStateContainer(predefinedBlockData);  // Paper - Anti-Xray - Add predefined block data
+        for (int i = 0; i < blockIds.length; i++) {
+            int xx = i & 15;
+            int yy = (i >> 8) & 15;
+            int zz = (i >> 4) & 15;
+            this.data.set(xx, yy, zz, Block.BLOCK_STATE_IDS.getByValue(blockIds[i]));
+        }
+        this.blockLight = new NibbleArray();
+        if (flag) {
+            this.skyLight = new NibbleArray();
+        }
+        recalculateRefCounts();
+    }
+
     public IBlockState get(int x, int y, int z)
     {
         return this.data.get(x, y, z);
@@ -65,7 +93,8 @@
 
     public boolean isEmpty()
     {
-        return this.blockRefCount == 0;
+        // return this.blockRefCount == 0;
+        return false; // CraftBukkit - MC-80966
     }
 
     public boolean needsRandomTick()
